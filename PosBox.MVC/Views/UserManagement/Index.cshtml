@model IEnumerable<PosBox.BLL.DTOs.UserDTO>
@{
    ViewData["Title"] = "Manage Users";
    Layout = "_AdminLayout";
}

<div class="d-flex justify-content-between align-items-center mb-4">
    <h1 class="h3 mb-0">User Management</h1>
    <div class="d-flex">
        <div class="input-group me-2" style="width: 250px;">
            <input type="text" id="searchInput" class="form-control" placeholder="Search users...">
            <button class="btn btn-outline-secondary" type="button" id="searchBtn">
                <i class="bi bi-search"></i>
            </button>
        </div>
        <button class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#addUserModal">
            <i class="bi bi-person-plus me-1"></i> Add User
        </button>
    </div>
</div>

<div class="row mb-4">
    <div class="col-xl-3 col-md-6 mb-4">
        <div class="status-card status-card-primary p-3">
            <div class="card-body">
                <div class="card-title">Total Users</div>
                <div class="card-value">@ViewBag.TotalUsers</div>
                <i class="bi bi-people status-card-icon"></i>
            </div>
        </div>
    </div>

    <div class="col-xl-3 col-md-6 mb-4">
        <div class="status-card status-card-success p-3">
            <div class="card-body">
                <div class="card-title">Active Users</div>
                <div class="card-value">@ViewBag.ActiveUsers</div>
                <i class="bi bi-person-check status-card-icon"></i>
            </div>
        </div>
    </div>

    <div class="col-xl-3 col-md-6 mb-4">
        <div class="status-card status-card-warning p-3">
            <div class="card-body">
                <div class="card-title">Inactive Users</div>
                <div class="card-value">@ViewBag.InactiveUsers</div>
                <i class="bi bi-person-dash status-card-icon"></i>
            </div>
        </div>
    </div>

    <div class="col-xl-3 col-md-6 mb-4">
        <div class="status-card status-card-info p-3">
            <div class="card-body">
                <div class="card-title">Admin Users</div>
                <div class="card-value">@ViewBag.AdminUsers</div>
                <i class="bi bi-person-gear status-card-icon"></i>
            </div>
        </div>
    </div>
</div>

<div class="dashboard-card mb-4">
    <div class="card-header d-flex justify-content-between align-items-center">
        <div class="d-flex align-items-center">
            <h6 class="m-0">User Accounts</h6>
            <div class="dropdown ms-3">
                <button class="btn btn-sm btn-outline-secondary dropdown-toggle" type="button" id="filterDropdown" data-bs-toggle="dropdown" aria-expanded="false">
                    <i class="bi bi-funnel me-1"></i> Filter
                </button>
                <ul class="dropdown-menu" aria-labelledby="filterDropdown">
                    <li><a class="dropdown-item" href="#" data-filter="all">All Users</a></li>
                    <li><a class="dropdown-item" href="#" data-filter="active">Active Users</a></li>
                    <li><a class="dropdown-item" href="#" data-filter="inactive">Inactive Users</a></li>
                    <li><a class="dropdown-item" href="#" data-filter="blocked">Blocked Users</a></li>
                    <li><hr class="dropdown-divider"></li>
                    <li><a class="dropdown-item" href="#" data-filter="admin">Admin Users</a></li>
                    <li><a class="dropdown-item" href="#" data-filter="manager">Manager Users</a></li>
                </ul>
            </div>
        </div>
        <div class="btn-group">
            <button type="button" class="btn btn-sm btn-outline-secondary" id="exportCsv">
                <i class="bi bi-file-earmark-excel me-1"></i> Export
            </button>
        </div>
    </div>
    <div class="card-body">
        <div class="table-responsive">
            <table class="table admin-table table-hover" id="usersTable">
                <thead>
                    <tr>
                        <th>
                            <input type="checkbox" id="selectAll" class="form-check-input">
                        </th>
                        <th>User</th>
                        <th>Email</th>
                        <th>Role</th>
                        <th>Status</th>
                        <th>Created</th>
                        <th>Actions</th>
                    </tr>
                </thead>
                <tbody>
                    @if (Model != null && Model.Any())
                    {
                        @foreach (var user in Model)
                        {
                            <tr>
                                <td><input type="checkbox" class="form-check-input user-select" value="@user.Id"></td>
                                <td>
                                    <div class="d-flex align-items-center">
                                        <div class="avatar-circle me-2 bg-primary">@(user.UserName.Length > 0 ? user.UserName.Substring(0, 1).ToUpper() : "U")</div>
                                        <div>
                                            <div class="fw-bold">@user.UserName</div>
                                            <div class="small text-muted">@@@user.UserName</div>
                                        </div>
                                    </div>
                                </td>
                                <td>@user.Email</td>
                                <td>
                                    @switch (user.UserRole)
                                    {
                                        case PosBox.DAL.Entity_Framework.Table_Models.Enums.UserRole.Admin:
                                            <span class="badge bg-info">Admin</span>
                                            break;
                                        case PosBox.DAL.Entity_Framework.Table_Models.Enums.UserRole.Manager:
                                            <span class="badge bg-primary">Manager</span>
                                            break;
                                        case PosBox.DAL.Entity_Framework.Table_Models.Enums.UserRole.Business:
                                            <span class="badge bg-secondary">Business</span>
                                            break;
                                        default:
                                            <span class="badge bg-secondary">Unknown</span>
                                            break;
                                    }
                                </td>
                                <td>
                                    @switch (user.UserStatus)
                                    {
                                        case PosBox.DAL.Entity_Framework.Table_Models.Enums.UserStatus.Active:
                                            <span class="badge bg-success">Active</span>
                                            break;
                                        case PosBox.DAL.Entity_Framework.Table_Models.Enums.UserStatus.Inactive:
                                            <span class="badge bg-warning">Inactive</span>
                                            break;
                                        case PosBox.DAL.Entity_Framework.Table_Models.Enums.UserStatus.Blocked:
                                            <span class="badge bg-danger">Blocked</span>
                                            break;
                                        default:
                                            <span class="badge bg-secondary">Unknown</span>
                                            break;
                                    }
                                </td>
                                <td>@user.CreatedAt.ToString("yyyy-MM-dd")</td>
                                <td>
                                    <div class="d-flex gap-1">
                                        <button class="btn btn-icon btn-icon-primary edit-user" title="Edit User" data-id="@user.Id">
                                            <i class="bi bi-pencil"></i>
                                        </button>
                                        <button class="btn btn-icon btn-icon-info view-user" title="View Details" data-id="@user.Id">
                                            <i class="bi bi-eye"></i>
                                        </button>
                                        <button class="btn btn-icon btn-icon-danger delete-user" title="Delete User" data-id="@user.Id">
                                            <i class="bi bi-trash"></i>
                                        </button>
                                    </div>
                                </td>
                            </tr>
                        }
                    }
                    else
                    {
                        <tr>
                            <td colspan="7" class="text-center">No users found</td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    </div>
    <div class="card-footer d-flex justify-content-between align-items-center">
        <div>
            <span class="me-2">Selected: <span id="selectedCount">0</span></span>
            <div class="btn-group">
                <button type="button" class="btn btn-sm btn-outline-success" id="activateUsers" disabled>Activate</button>
                <button type="button" class="btn btn-sm btn-outline-warning" id="blockUsers" disabled>Block</button>
                <button type="button" class="btn btn-sm btn-outline-danger" id="deleteUsers" disabled>Delete</button>
            </div>
        </div>
        <nav aria-label="Users pagination">
            <ul class="pagination mb-0">
                <li class="page-item disabled">
                    <a class="page-link" href="#" aria-label="Previous">
                        <span aria-hidden="true">&laquo;</span>
                    </a>
                </li>
                <li class="page-item active"><a class="page-link" href="#">1</a></li>
                <li class="page-item"><a class="page-link" href="#">2</a></li>
                <li class="page-item"><a class="page-link" href="#">3</a></li>
                <li class="page-item">
                    <a class="page-link" href="#" aria-label="Next">
                        <span aria-hidden="true">&raquo;</span>
                    </a>
                </li>
            </ul>
        </nav>
    </div>
</div>

<!-- Add User Modal -->
<div class="modal fade" id="addUserModal" tabindex="-1" aria-labelledby="addUserModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="addUserModalLabel">Add New User</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <form id="addUserForm">
                    <div class="row mb-3">
                        <div class="col-md-6">
                            <label for="userName" class="form-label">Username</label>
                            <input type="text" class="form-control" id="userName" required>
                        </div>
                        <div class="col-md-6">
                            <label for="email" class="form-label">Email</label>
                            <input type="email" class="form-control" id="email" required>
                        </div>
                    </div>
                    <div class="row mb-3">
                        <div class="col-md-6">
                            <label for="password" class="form-label">Password</label>
                            <input type="password" class="form-control" id="password" required>
                        </div>
                        <div class="col-md-6">
                            <label for="confirmPassword" class="form-label">Confirm Password</label>
                            <input type="password" class="form-control" id="confirmPassword" required>
                        </div>
                    </div>
                    <div class="row mb-3">
                        <div class="col-md-6">
                            <label for="role" class="form-label">Role</label>
                            <select class="form-select" id="role" required>
                                <option value="">Select Role</option>
                                <option value="Admin">Admin</option>
                                <option value="Manager">Manager</option>
                                <option value="Business">Business</option>
                            </select>
                        </div>
                        <div class="col-md-6">
                            <label for="status" class="form-label">Status</label>
                            <select class="form-select" id="status" required>
                                <option value="Active">Active</option>
                                <option value="Inactive">Inactive</option>
                                <option value="Blocked">Blocked</option>
                            </select>
                        </div>
                    </div>
                    <div class="mb-3">
                        <div class="form-check">
                            <input class="form-check-input" type="checkbox" id="sendWelcomeEmail">
                            <label class="form-check-label" for="sendWelcomeEmail">
                                Send welcome email with login details
                            </label>
                        </div>
                    </div>
                </form>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                <button type="button" class="btn btn-primary" id="saveUser">Save User</button>
            </div>
        </div>
    </div>
</div>

<!-- View User Modal -->
<div class="modal fade" id="viewUserModal" tabindex="-1" aria-labelledby="viewUserModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="viewUserModalLabel">User Details</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body" id="userDetailContent">
                <!-- User details will be loaded here -->
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                <button type="button" class="btn btn-primary edit-user-btn">Edit User</button>
            </div>
        </div>
    </div>
</div>

<style>
    .avatar-circle {
        width: 40px;
        height: 40px;
        border-radius: 50%;
        color: white;
        text-align: center;
        line-height: 40px;
        font-weight: 500;
    }
</style>

@section Scripts {
    <script>
        $(document).ready(function() {
            // Select all functionality
            $('#selectAll').change(function() {
                $('.user-select').prop('checked', $(this).is(':checked'));
                updateSelectedCount();
            });

            // Update selected count when individual checkboxes change
            $('.user-select').change(function() {
                updateSelectedCount();
            });

            // Update selected count and enable/disable bulk action buttons
            function updateSelectedCount() {
                const selectedCount = $('.user-select:checked').length;
                $('#selectedCount').text(selectedCount);
                
                if (selectedCount > 0) {
                    $('#activateUsers, #blockUsers, #deleteUsers').prop('disabled', false);
                } else {
                    $('#activateUsers, #blockUsers, #deleteUsers').prop('disabled', true);
                }
            }

            // View user details
            $('.view-user').click(function() {
                const userId = $(this).data('id');
                // In a real application, you would make an AJAX request to fetch user details
                
                // For demo purposes, let's get the data from the table row
                const row = $(this).closest('tr');
                const userName = row.find('td:nth-child(2) .fw-bold').text();
                const email = row.find('td:nth-child(3)').text();
                const role = row.find('td:nth-child(4)').html();
                const status = row.find('td:nth-child(5)').html();
                const created = row.find('td:nth-child(6)').text();

                $('#userDetailContent').html(`
                    <div class="row">
                        <div class="col-md-4 text-center mb-3">
                            <div class="avatar-circle mx-auto mb-3" style="width: 100px; height: 100px; line-height: 100px; font-size: 2.5rem; background-color: #0d6efd">
                                ${userName.substring(0, 1).toUpperCase()}
                            </div>
                            <h5>${userName}</h5>
                            <p class="text-muted mb-0">${email}</p>
                            <div class="mt-2">${role}</div>
                        </div>
                        <div class="col-md-8">
                            <div class="row mb-3">
                                <div class="col-md-6">
                                    <strong>Status:</strong> ${status}
                                </div>
                                <div class="col-md-6">
                                    <strong>Created:</strong> ${created}
                                </div>
                            </div>
                            <hr>
                            <div class="d-flex justify-content-between mb-3">
                                <button class="btn btn-sm btn-outline-primary">
                                    <i class="bi bi-key me-1"></i> Reset Password
                                </button>
                                <button class="btn btn-sm ${status.includes('Active') ? 'btn-outline-warning' : 'btn-outline-success'}">
                                    <i class="bi bi-${status.includes('Active') ? 'person-lock' : 'person-check'} me-1"></i> ${status.includes('Active') ? 'Block User' : 'Activate User'}
                                </button>
                            </div>
                        </div>
                    </div>
                `);
                
                $('#viewUserModal').modal('show');
            });

            // Edit user button in view modal
            $('.edit-user-btn').click(function() {
                $('#viewUserModal').modal('hide');
                // In a real application, you would open the edit modal with prefilled data
                setTimeout(() => {
                    $('#addUserModalLabel').text('Edit User');
                    $('#addUserModal').modal('show');
                }, 500);
            });

            // Direct edit button
            $('.edit-user').click(function() {
                const userId = $(this).data('id');
                // In a real application, you would fetch the user data and prefill the form
                $('#addUserModalLabel').text('Edit User');
                $('#addUserModal').modal('show');
            });

            // Delete user
            $('.delete-user').click(function() {
                if (confirm('Are you sure you want to delete this user?')) {
                    const userId = $(this).data('id');
                    
                    $.ajax({
                        url: '@Url.Action("Delete", "UserManagement")',
                        type: 'POST',
                        contentType: 'application/json',
                        data: JSON.stringify([userId]),
                        success: function(response) {
                            if (response.success) {
                                $(`tr:has(input[value="${userId}"])`).fadeOut(400, function() {
                                    $(this).remove();
                                    updateSelectedCount();
                                });
                            } else {
                                alert(response.message);
                            }
                        },
                        error: function() {
                            alert('An error occurred while deleting the user.');
                        }
                    });
                }
            });

            // Search functionality
            $('#searchInput').on('keyup', function() {
                var value = $(this).val().toLowerCase();
                $("#usersTable tbody tr").filter(function() {
                    $(this).toggle($(this).text().toLowerCase().indexOf(value) > -1);
                });
            });

            // Save user button
            $('#saveUser').click(function() {
                if ($('#addUserForm')[0].checkValidity()) {
                    // In a real application, you would submit the form via AJAX
                    alert('User saved successfully!');
                    $('#addUserModal').modal('hide');
                } else {
                    // Trigger HTML5 validation
                    $('#addUserForm')[0].reportValidity();
                }
            });

            // Export to CSV functionality
            $('#exportCsv').click(function() {
                alert('CSV export functionality will be implemented here');
            });

            // Activate users
            $('#activateUsers').click(function() {
                const selectedIds = $('.user-select:checked').map(function() {
                    return $(this).val();
                }).get();
                
                if (selectedIds.length > 0 && confirm(`Are you sure you want to activate ${selectedIds.length} selected users?`)) {
                    $.ajax({
                        url: '@Url.Action("Activate", "UserManagement")',
                        type: 'POST',
                        contentType: 'application/json',
                        data: JSON.stringify(selectedIds),
                        success: function(response) {
                            if (response.success) {
                                $('.user-select:checked').closest('tr').find('td:nth-child(5) .badge')
                                    .removeClass('bg-warning bg-danger bg-secondary')
                                    .addClass('bg-success')
                                    .text('Active');
                                alert(response.message);
                            } else {
                                alert(response.message);
                            }
                        },
                        error: function() {
                            alert('An error occurred while activating the users.');
                        }
                    });
                }
            });

            // Block users
            $('#blockUsers').click(function() {
                const selectedIds = $('.user-select:checked').map(function() {
                    return $(this).val();
                }).get();
                
                if (selectedIds.length > 0 && confirm(`Are you sure you want to block ${selectedIds.length} selected users?`)) {
                    $.ajax({
                        url: '@Url.Action("Block", "UserManagement")',
                        type: 'POST',
                        contentType: 'application/json',
                        data: JSON.stringify(selectedIds),
                        success: function(response) {
                            if (response.success) {
                                $('.user-select:checked').closest('tr').find('td:nth-child(5) .badge')
                                    .removeClass('bg-success bg-warning bg-secondary')
                                    .addClass('bg-danger')
                                    .text('Blocked');
                                alert(response.message);
                            } else {
                                alert(response.message);
                            }
                        },
                        error: function() {
                            alert('An error occurred while blocking the users.');
                        }
                    });
                }
            });

            // Delete users
            $('#deleteUsers').click(function() {
                const selectedIds = $('.user-select:checked').map(function() {
                    return $(this).val();
                }).get();
                
                if (selectedIds.length > 0 && confirm(`Are you sure you want to delete ${selectedIds.length} selected users?`)) {
                    $.ajax({
                        url: '@Url.Action("Delete", "UserManagement")',
                        type: 'POST',
                        contentType: 'application/json',
                        data: JSON.stringify(selectedIds),
                        success: function(response) {
                            if (response.success) {
                                $('.user-select:checked').closest('tr').fadeOut(400, function() {
                                    $(this).remove();
                                    updateSelectedCount();
                                });
                                alert(response.message);
                            } else {
                                alert(response.message);
                            }
                        },
                        error: function() {
                            alert('An error occurred while deleting the users.');
                        }
                    });
                }
            });

            // Filter dropdown items
            $('.dropdown-item[data-filter]').click(function(e) {
                e.preventDefault();
                const filter = $(this).data('filter');
                
                // In a real application, you would apply filtering logic
                alert(`Filter applied: ${filter}`);
            });
        });
    </script>
}